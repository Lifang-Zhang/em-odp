name: CI

on:
  workflow_dispatch:
  push:
    paths:
      - '!.github/dockerfiles/Dockerfile-ubuntu-with-dependencies'
  pull_request:
    paths:
       - '!.github/dockerfiles/Dockerfile-ubuntu-with-dependencies'
  repository_dispatch: # Dispatch from workflow Build and publish docker image
    types: [image-built]

env:
  CC: gcc
  # Docker tag
  DTAG: em-odp-docker
  # The ubuntu image with dependencies installed
  # To be used by Build-Run-on-Ubuntu-Docker to specify another base image with
  # --build-arg "IMAGE=${{ env.IMAG }}:${GITHUB_REF##*/}"
  IMAG: ghcr.io/${{github.repository}}/ubuntu_20.04-with-dependencies

jobs:
  # Perform lint check
  Lint-Code-Base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout EM-ODP
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files
          # within `super-linter`
          fetch-depth: 0
      - name: Lint check
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build doxygen documentation
  Build-Doxygen:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install asciidoctor mscgen graphviz doxygen
        sudo apt-get install libconfig-dev
    - name: Build
      run: ./scripts/build.sh -d

  # Build EM-ODP and run robot tests on github hosted ubuntu runner
  Build-Run-on-Ubuntu-Runner:
    runs-on: ubuntu-18.04
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libconfig-dev
        sudo pip3 install robotframework
    - name: Checkout EM-ODP
      uses: actions/checkout@v2
    - name: Checkout ci
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/ci
        clean: false
        path: ci
        ref: clean-up
    - name: Build EM-ODP
      run: ./scripts/build.sh
    - name: Run Robot Tests
      run: |
        sudo sysctl -w vm.nr_hugepages=512
        grep Huge /proc/meminfo
        sudo /bin/bash ./scripts/robot_test.sh

  # Build EM-ODP and run robot tests inside an ubuntu docker container
  Build-Run-on-Ubuntu-Docker:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
    steps:
    - name: Checkout EM-ODP
      uses: actions/checkout@v2
    - name: Checkout ci
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/ci
        clean: false
        path: ci
        ref: clean-up
    - name: Build EM-ODP
      run: >
        sudo docker build
        -f .github/dockerfiles/Dockerfile-em-odp
        -t "${DTAG}"
        --build-arg "CC_ARG=${{matrix.cc}}"
        "${PWD}"
    - name: Run robot tests
      run: >
        sudo docker run
        --privileged
        --name focal
        -i
        -v /dev/hugepages:/dev/hugepages
        -v "${PWD}:/root/em-odp"
        --shm-size 4g
        -e "CC=${{matrix.cc}}"
        "${DTAG}"
